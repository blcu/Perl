
3_1
for($i=0; $i<5; $i++){
	$array[$i]=2*$i;
	print $array[$i]."\t";
}
3_2
@array=();
for($i=0; $i<5; $i++){
	push(@array,$i);
}

3_3
@array=();
for($i=0; $i<5; $i++){
	unshift (@array,$i);
}

3_4
@array1=(1,2);
@array2=("a","b");
push(@array1, @array2);

foreach (@array1) {
	print $_."\t";
}
3_5
@array=(1,2,3);
print $array[2];

3_6
@array=('a','b','c'); 
$b=@array;
print $b;
3_7
@array=(1,2,3); 
for($i=0; $i<@array;$i++){
	print "$array[$i] ";
}
3_8
@array=(1,3.5,"abc",'cde'); 
for($i=0; $i<@array;$i++)
{
	print "$array[$i]\t";
}
3_9
@array=("hello","perl","world");
foreach $word (@array)	{
	if(length($word)>4){
		print "$word ";
	}
}

3_10
@array=(83,23,45,90,98);
foreach (@array)	{
	$sum+=$_;
}
$avg=$sum/@array;
print "平均值：$avg";

3_11
@array=(1,2,3,4,5);

($first,$second)= @array;
print "数组的第1个成员: $first\n";
print "数组的第2个成员: $second\n";

($first,$second,@subArray)= @array;
print "$first $second ";

foreach $ele (@subArray){
	print "$ele ";
}


3_12
@array=("a","bc","abc","bcd","c");
@newArray=sort @array;
foreach $ele(@newArray){
	print $ele." ";
}

3_13
@array=(1,3,10,2,21);
@newArray=sort @array;
foreach $ele(@newArray){
	print $ele." ";
}

3_14
@array=(1,3,10,2,21);
@newArray1=sort {$a <=> $b} @array;
foreach $ele(@newArray1){
	print $ele." ";
}
print "\n";
foreach $ele(sort {$b <=> $a} @array){
	print $ele." ";
}
3_15
@array=("a","bc","abc","bcd","c");
$lastEle=pop(@array);
$firstEle=shift(@array);
unshift(@array,$lastEle);
push(@array,$firstEle);
print "$firstEle $lastEle\n";
foreach $ele(@array){
	print $ele." ";
}

3_16
$aString="The deer did not trust us and kept their distance .";
@array=split(" ",$aString);
print $aString. "\n";
foreach $ele(sort @array){
	print $ele." ";
}
3_17
@array=("The","deer","did","not","trust","us",
				"and","kept","their","distance",".");
$aString=join(" ",@array);
print $aString;
3_18
$line="The most precious possession that 
			 ever comes to a man in this world is a woman's heart .";
#以空格为分隔符，将$line分割成若干子串，并将每个子串存入数组（@array）
@array=split(" ",$line); 

foreach $word (sort @array)	{
	#将长度大于5的子串放入数组（@words）
	if ( length($word)>5 ){  
		push(@words,$word);
	}
}

print "word's length is more than 5:\n";
#有序地遍历数组成员
foreach (sort @words)	{  
	print "$_\t";
}
3_19
%hash = ("Michael",21,"Candy",30,"Ethan",18);
$age = $hash{"Michael"};
print "哈希成员访问：\n";
print "Michael: $age\n";
3_20
%hash = ("Michael",21,"Candy",30,"Ethan",18);
@arr=keys(%hash);
foreach (@arr){
	print $_." ";	
}
3_21
%Ages = ("Maris", 61, "Aaron", 75, "Young", 51);
@names=keys %Ages;
foreach $Name (@names){
	print "$Name:$Ages{$Name}\n";
}
3_22
%Ages = ("Maris", 61, "Aaron", 75, "Young", 51);
foreach $Name (keys %Ages){
	print "$Name:$Ages{$Name}\n";
}
3_23
%Ages = ("Maris", 61, "Aaron", 75, "Young", 51);
foreach $Name (sort keys %Ages){
	print "$Name	$Ages{$Name}\n";
}

3_24
%Ages = ("Maris", 61, "Aaron", 75, "Young", 51);
foreach $aName (sort{$Ages{$a}<=>$Ages{$b}} keys %Ages){
	print "$aName	$Ages{$aName}\n";
}

3_25
%Ages = ("Maris", 61, "Aaron", 75, "Young", 51);
if(defined $Ages{"Mark"}){
	$Ages{"Mark"}++;
}
else{
	$Ages{"Mark"}=20;
}
foreach $aName (sort {$Ages{$a} <=> $Ages{$b} } keys %Ages){
	print "$aName\t$Ages{$aName}\n";
}

3_26
%Ages = ("Maris", 61, "Aaron", 75, "Young", 51);
delete $Ages{"Aaron"};
foreach $Name (sort keys %Ages){
	print "$Name	$Ages{$Name}\n";
}

3_27
@name=("Lingkar","Klara","Aurora");
@ages=(26,27,24);

#@name和@ages元素个数相同，$i<@name来控制循环
for($i=0;$i<@name;$i++)	{
	#姓名为key，年龄为value
	$hash{$name[$i]}=$ages[$i];	
}

#遍历哈希
foreach $member(sort keys %hash)	{
	print "$member is $hash{$member} years old.\n";
}

#查找一个姓名
if(defined $hash{"Babara"}){
	print "%hash{\"Babara\"}\n";
}else{
	print "Not Found!\n";
}



3_28
#一个常用读文件的样例
open(In,"read_file.txt");
while( $line=<In> ){
	chomp($line);
	print $line."\n";	#将文件内容一行一行输出到屏幕上
}
close(In);


3_29
open(In,"read_file.txt") || die("error in open!");
@lines=<In>;
chomp(@lines);
close(In);

foreach $Line (@lines){
	print "$Line\n";
}
3_30
#从标准输入中读取一个字符串
$line=<stdin>;
print $line;


3_31
open(In,"read_file.txt");
open(Out,">out.txt");
while($lines=<In>){
	chomp($lines);
	print Out "$lines\n";
}
close(In);
close(Out);




3_32
#输出d:\perl\目录下所有文件
opendir(Dir,"D:\\perl\\");	
@File=readdir(Dir);
foreach $file_name(@File){
	print "$file_name\n";
}
close(Dir); 



3_33
use Cwd;	#为了保证平台的兼容性，多使用Cwd来获取当前目录；
$CurrentDir=cwd();  #变量$Current获取当前目录
opendir(Dir,$CurrentDir) || die("error in opendir!");
@files=readdir(Dir);
close(Dir);

open(Out,">out.txt");
foreach(@files){
	if(index($_,".txt") == length($_)-4){
		open(In,$_);
		while(<In>){	
			chomp;
			print Out $_."\n";
		}
		close(In);
	}
}
close(Out);


3_34
open (Out,">c.txt");

open(In,"a.txt");
while( $Line=<In>) {
	chomp($Line);
	print Out "$Line\n";
}
close(In);

open (In,"b.txt");
while ( $Line=<In>) {
	chomp($Line);
	print Out "$Line\n";
}
close(In);

close(Out);


3_35
open (Out,">c.txt");
@File=("a.txt","b.txt");
foreach $file(@Files){

	open(In,"$file");
	while ($Line=<In>) {
		chomp($Line);
		print Out "$Line\n";
	}
	close(In);
}
close(Out);


3_36
open (Out,">c.txt");
@File=("a.txt","b.txt");
foreach $file(@Files){
  Process($file,Out);
}
close(Out);

sub Process
{
	my($file,$Handle)=@_;
	open(In,"$file");
	while ($Line=<In>) {
			chomp($Line);
			print $Handle "$Line\n";
		}
		close(In);
}
3_37
for ($i=1; $i<=3;$i++) {
	print "第$i次调用HelloOrBye:";
	HelloOrBye();
}

sub HelloOrBye(){
	my $str1="hello,world!\n";
	my $str2="good bye!\n";

	my $n=int(rand(2));
	if($n) {
	  print $str1;
	}
	else{
	  print $str2;
	}
}
3_38
$a=1;	#具有全局作用域的全局变量（$a）
func();
print $a." ";

sub func(){
	my $a=2;	#具有函数作用域的局部变量（$a）
	{
		my $a=3;	#具有代码块作用域的局部变量（$a）
		print $a." ";
	}
	print $a." ";
}




3_39
func1();
func2();

sub func1(){
	my $a="Hello,world!\n";
	print $a;
}
sub func2(){
	my $a="It's an example.\n";
	print $a;
}


3_40
$val="string1";
func();
$val="string2";
func();
sub func{
	print "this is $val\n";
}

3_41
print "\n";
func("string1");
func("string2");
sub func{
	my ($val)=@_;
	print "this is $val\n";
}
print "\n";
3_42
open(Out,">c.txt");
MergeFile("a.txt",Out);
MergeFile("b.txt",Out);
close(Out);

sub MergeFile(){
	my ($filename, $fp)=@_;
	open(In,$filename);
	while(<In>){
		chomp;
		print $fp "$_\n";
	}
	close(In);
}

3_43
print hello("world");
sub hello(){
	my ($str)=@_;
	$str="hello $str!\n";
	return $str;
}